#!/bin/bash

function usage_exit(){
	echo "Usage: $0 [options] YAML-FILE"
	echo -e "\tYAML: URI YAML FILE"
	echo -e "\t-u: URL (default: localhost)"
	echo -e "\t-s: Only State Code"
	echo -e "\t-H: Only HEAD"
	echo -e "\t-v: Verbose output"
	echo -e "\t-o: Output File"
	echo -e "\t-O: Output File(stderr too)"
	echo -e "\t-q: Output in Quiet"
	echo -e "\t-h: Help"
	exit 1
}

while getopts ":u:o:O:sHvhq" OPT; do
	case $OPT in
	u) URL=$OPTARG
		;;
	H) HEADER="-I"
		;;
	v) VERBOSE="-v"
		;;
	o) OUTPUT=">> $OPTARG"
		;;
	O) OUTPUT=">> $OPTARG 2>&1"
		;;
	s) STATUS_ONLY="-o /dev/null -w '%{http_code}\n' -s"
		;;
	q) QUIET=">/dev/null 2>&1"
		;;
	h) usage_exit
		;;
	\?) usage_exit
		;;
	esac
done
shift $((OPTIND-1))

if [ -z "$1" ]; then
	echo "Not found YAML file."
	usage_exit
fi

YAML="$1"
URL=${URL:-"http://localhost"}
URI_LIST=$(./parse.py $YAML | jq -r ".path[].uri")
METHOD_LIST=$(./parse.py $YAML | jq -r ".path[].method")

if [ -n "$HEADER" -a -n "$VERBOSE" ]; then
	echo "Only One Option, HEADER OR VERBOSE"
	usage_exit
fi
if [ -n "$STATUS_ONLY" ] && [ -n "$HEADER" -a -n "$VERBOSE" ]; then
	echo "Must not use satus only option and (Header or Verbose)options"
	usage_exit
fi

if [ -n "$QUIET" ]; then
	META=$QUIET
else
	META=$OUTPUT
fi

LINE=$(echo $URI_LIST | wc -w)
for ((i=0;i<$LINE;i++)); do
	ALLURI=$URL$(echo $URI_LIST | cut -d' ' -f$((i+1)))
	METHOD=$(echo $METHOD_LIST | cut -d' ' -f$((i+1)))
	eval "echo -n \"Test URL: \"$ALLURI\" => METHOD: \"$METHOD\"\"" $META

	case $METHOD in
	"GET") MOPTION=
		echo -en "\n"
		;;
	"POST") MOPTION="-X POST"
		DATA_VALUE=$(./parse.py $YAML | jq -r ".path[$i].data")
		echo -en " (DATA:\"$DATA_VALUE\")\n"
		DATA="-d '$DATA_VALUE'"
		;;
	"HEAD") MOPTION="-I"
		echo -en "\n"
		;;
	\?)
		echo -en "\n"
		echo "unknown method $MOPTION"
		continue
	esac
	eval echo "=====================" $META

	eval curl $MOPTION $DATA $HEADER $VERBOSE $ALLURI $STATUS_ONLY $OUTPUT
done
